1) XML -eXtensible Marcup Language расширяемый язык разметки, созданными для хранения, транспортировки и обмена данными
2) Что наш документ размещен в XML
3) У всех тегов должен быть закрывающий тег, теги регистрозависимы, правильная вложенность, перед закрывающим тегом
нужно ставить слэш, значения должны быть в одинарных или двойных кавычках, в XML документе должен быть 1 корневой
тег в котором будут все элементы, учитываются все символы форматирования
4)могут начинаться только с букв и символа подчеркивания; могут содержать буквы, цифры, дефисы, точки и символы
подчеркивания и не могут начинаться с "xml". Зарезервированных слов нет
5)если первый тег открылся раньше второго, то закрыться он должен позже
6) корневой элемент бывает только один, в нем сожержаться все элементы
8)Для нахождения синтаксических ошибок в коде
9)в комплексный элемент вложены другие элементы и могут иметь атрибуты
10)XML схема пишется на XML
XML схема легко расширяется
XML схема поддерживает пространство имен
XML схема поддерживает типы данных
11)пустые элементы
элементы, содержащие только другие элементы
элементы, содержащие только текст
элементы, содержащие другие элементы и текст
12)Пустые, содержашие текст
13)Определяем какой-то элемент
14)У этого элемента комплексный тип
15)Составить упорядоченность
16)Элемент xsl:attribute служит для создания узлов атрибутов в выходном документе
17)Атрибут noNamespaceSchemaLocation относится к документу схемы XML без целевого пространства имен указывает, где именно находится схема
18)Сущности содержат подвергнутые или не подвергнутые анализу данные. Проанализированные данные состоят из символов, часть которых образует символьные данные, а часть - разметку.
19)Сущность является заместителем содержания, которую можно однажды объявить и многократно использовать 
почти в любом месте документа Есть пять встроенных сущностей, которые играют свою роль в правильно сформированном XML, они –

амперсанд: & amp;

Одинарная кавычка: & apos;

Больше чем: & gt;

Менее чем: & lt;

Двойная кавычка: & quot;
20)lt(<), gt(>), amp(&), apos('), quot(")
21) для перечисления и объявления атрибутов, которые могут принадлежать элементу
22)Синтаксически правильный + должен соответсвовать определенному типу документов; 
23) все name заменяются на hello, world
24)!ELEMENT to определяет, что элемент to должен быть типа "#PCDATA"
25)elementName, attributeName, dataType, CDATA, ID, IDREF
26)name, Content, ANY, EMPTY
27)XML, DTD, Schema, ссылки на различные ресурсы
28)DTD (Document Type Definition, определение типа документа), внутренней декларацией с помощью [], или внешней
с помощью <!DOCTYPE note SYSTEM "note.dtd">